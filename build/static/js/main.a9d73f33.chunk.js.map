{"version":3,"sources":["components/SearchBar.js","action/AddProductAction.js","components/SubElementsDisplay.js","components/BillingItemsDisplay.js","action/UpdateQtyAction.js","App.js","serviceWorker.js","reducers/BillPageReducer.js","reducers/rootReducer.js","index.js","store.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onchange","event","setState","objectSpread","state","selectedDropDown","target","value","addProduct","AddProductAction","react_default","a","createElement","className","htmlFor","name","id","onChange","onClick","Component","connect","dispatch","product","type","SubElementsDisplay","updateLabour","labour_charge","parseInt","updateProfit","profit","getTotalMaterialCost","total","subelements","forEach","subelement","Rate","product_qty","getsubelements","res","slno","push","key","subElementName","qty_req","weight","colSpan","ownprops","BillPageReducer","subElements","product_name","BillingItemsDisplay","updateQty","UpdateProductQtyAction","getItemsRows","count","keys","cartProductList","element","qty","components_SubElementsDisplay","payload","App","components_SearchBar","components_BillingItemsDisplay","Boolean","window","location","hostname","match","initialState","Prop 2mtr + 2mtr","Prop 3mtr + 3mtr","combineReducers","arguments","length","undefined","action","includes","alert","defineProperty","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9d73f33.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AddProductAction} from '../action/AddProductAction';\r\n\r\nclass SearchBar extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            selectedDropDown: 'Prop 2mtr + 2mtr'\r\n        }   \r\n    }\r\n    onchange = (event) => {\r\n        this.setState({...this.state, selectedDropDown: event.target.value});\r\n    }\r\n    addProduct = (event) => {\r\n        this.props.AddProductAction(this.state.selectedDropDown);\r\n    } \r\n    render(){\r\n        return (\r\n            <div className='form-group form-inline'>\r\n                <label htmlFor='search_drop_down' className='btn control-label'>Select Product Type</label>\r\n                <select  name='search_drop_down' id='search_drop_down' className='form-control' onChange={this.onchange}>\r\n                    <option value='Prop 2mtr + 2mtr'>Prop 2mtr + 2mtr</option>\r\n                    <option value='Prop 3mtr + 3mtr'>Prop 3mtr + 3mtr</option>\r\n                </select>\r\n                <button className='btn btn-success' onClick={this.addProduct}>ADD</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddProductAction: (product) => dispatch(AddProductAction(product))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchBar);","export const AddProductAction = (product) => dispatch => {\r\n    dispatch({\r\n     type: 'ADD_PRODUCT',\r\n     product: product\r\n    })\r\n   }\r\n\r\n// okay","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass SubElementsDisplay extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            labour_charge: 57,\r\n            profit: 8\r\n        }\r\n    }\r\n    updateLabour = (event) => {\r\n        this.setState({...this.state, labour_charge: parseInt(event.target.value)})\r\n    }\r\n    updateProfit = (event) => {\r\n        this.setState({...this.state, profit: parseInt(event.target.value)})\r\n    }\r\n    getTotalMaterialCost = () => {\r\n        var total = 0;\r\n        this.props.subelements.forEach((subelement) => {\r\n            total = total + subelement.Rate;\r\n        })\r\n        return total * this.props.product_qty;\r\n    }\r\n    getsubelements = () => {\r\n        var res = [];\r\n        var slno = 1;\r\n        this.props.subelements.forEach((subelement) => {\r\n            res.push(\r\n            <tr key={slno}>\r\n                <td>\r\n                    {slno}\r\n                </td>\r\n                <td>\r\n                    {subelement.subElementName}\r\n                </td>\r\n                <td>\r\n                    {subelement.qty_req}\r\n                </td>\r\n                <td>\r\n                    {subelement.weight}\r\n                </td>\r\n                <td>\r\n                    {subelement.Rate}\r\n                </td>\r\n                <td>\r\n                    {subelement.Rate*this.props.product_qty}\r\n                </td>\r\n            </tr>\r\n            );\r\n            slno++;\r\n        })\r\n        return res;\r\n    }\r\n    render(){\r\n        return (<div>\r\n            <table className='table table-bordered'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Sl No.</th>\r\n                        <th>Material Descripton</th>\r\n                        <th>Qty</th>\r\n                        <th>Wt</th>\r\n                        <th>Rate</th>\r\n                        <th>Total Rs</th>\r\n                    </tr>\r\n                </thead>\r\n            <tbody>\r\n                {this.getsubelements()}\r\n                <tr>\r\n                    <td colSpan='5'>Labour Charge</td>\r\n                    <td><input type='number' value={this.state.labour_charge} onChange={this.updateLabour} /></td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan='5'>Sub Total</td>\r\n                    <td>{this.getTotalMaterialCost() + this.state.labour_charge}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan='5'>\r\n                        Profit\r\n                        <input type='number' value={this.state.profit} onChange={this.updateProfit}/> %\r\n                    </td>\r\n                    <td>{\r\n                        (this.getTotalMaterialCost() + this.state.labour_charge)*this.state.profit/100\r\n                        }</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan='5'>Grand Total</td>\r\n                    <td>\r\n                        {\r\n                            (this.getTotalMaterialCost() + this.state.labour_charge) + \r\n                            (\r\n                                (\r\n                                    this.getTotalMaterialCost() + this.state.labour_charge)*this.state.profit/100\r\n                            )\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n            </div>)\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownprops) =>{\r\n    return {\r\n        subelements : state.BillPageReducer.subElements[ownprops.product_name]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SubElementsDisplay);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport SubElementsDisplay from './SubElementsDisplay';\r\nimport {UpdateProductQtyAction} from '../action/UpdateQtyAction';\r\n\r\n\r\nclass BillingItemsDisplay extends Component{\r\n    updateQty = (event, product_name) => {\r\n        this.props.UpdateProductQtyAction(product_name, event.target.value);\r\n    }\r\n\r\n    getItemsRows = () => {\r\n        var res = [];\r\n        var count = 0;\r\n        Object.keys(this.props.cartProductList).forEach(key => {\r\n            var element = this.props.cartProductList[key];\r\n            res.push((\r\n                <div key={count}>\r\n                    <b>Product Name</b> : {element.name} <br />\r\n                    <b>Qty</b> : <input type='number' value={element.qty} onChange={(event) => this.updateQty(event, element.name) } />\r\n                    <SubElementsDisplay product_name={element.name} product_qty={element.qty}/>\r\n                </div>\r\n            ));\r\n            count++;\r\n        });\r\n        return res;\r\n    }\r\n    render(){\r\n        return (\r\n        <div>\r\n            <h1>Product List</h1>\r\n            {this.getItemsRows()}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cartProductList: state.BillPageReducer.cartProductList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    UpdateProductQtyAction: (product, qty) => dispatch(UpdateProductQtyAction(product, qty))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BillingItemsDisplay);","export const UpdateProductQtyAction = (product, qty) => dispatch => {\r\n    dispatch({\r\n     type: 'UPDATE_PRODUCT_QTY',\r\n     payload: {\r\n        product: product,\r\n        qty: qty ? qty: 0\r\n     }\r\n    })\r\n   }","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport SearchBar from './components/SearchBar';\nimport BillingItemsDisplay from './components/BillingItemsDisplay';\n\nclass App extends Component {\n  render(){\n    return (\n      <div>\n        <div className='page-header'>\n          <h1>BILLING</h1>\n        </div>\n        <SearchBar />\n        <BillingItemsDisplay />\n        {/* <pre style={{background: 'orange'}}>\n          {\n            JSON.stringify(this.props,undefined, 2)\n          }\n          </pre> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n })\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var initialState = {\r\n   cartProductList: {},\r\n   subElements: {\r\n      'Prop 2mtr + 2mtr': [\r\n         {\r\n            'qty_req': 2,\r\n            'subElementName': '50NB X 3.2 mm',\r\n            'weight': 9.2,\r\n            'Rate': 52 \r\n         },\r\n         {\r\n            'qty_req': 2,\r\n            'subElementName': '40NB X 2.9 mm',\r\n            'weight': 6.5,\r\n            'Rate': 52\r\n         },\r\n         {\r\n            'qty_req': 0.85,\r\n            'subElementName': 'Prop Nut',\r\n            'weight': 1,\r\n            'Rate': 70\r\n         },\r\n         {\r\n            'qty_req': 2,\r\n            'subElementName': '40NB X 2.9 mm',\r\n            'weight': 2,\r\n            'Rate': 50\r\n         }\r\n      ],\r\n      'Prop 3mtr + 3mtr': [\r\n         {\r\n            'qty_req': 2,\r\n            'subElementName': '50NB X 3.2 mm',\r\n            'weight': 9.2,\r\n            'Rate': 52 \r\n         },\r\n         {\r\n            'qty_req': 2,\r\n            'subElementName': '40NB X 2.9 mm',\r\n            'weight': 6.5,\r\n            'Rate': 52\r\n         },\r\n         {\r\n            'qty_req': 0.85,\r\n            'subElementName': 'Prop Nut',\r\n            'weight': 1,\r\n            'Rate': 70\r\n         },\r\n         {\r\n            'qty_req': 2,\r\n            'subElementName': '40NB X 2.9 mm',\r\n            'weight': 2,\r\n            'Rate': 50\r\n         }\r\n      ]\r\n   }\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_PRODUCT':\r\n         if(Object.keys(state.cartProductList).includes(action.product)){\r\n            alert('Already Added');\r\n            return {...state}\r\n         }\r\n         return {...state, cartProductList: {\r\n                              ...state.cartProductList, \r\n                              [action.product]:{\r\n                                 name: action.product, \r\n                                 qty: 1\r\n                                 }\r\n                              }\r\n            }\r\n      case 'UPDATE_PRODUCT_QTY':\r\n         return {...state, cartProductList: {\r\n                              ...state.cartProductList, \r\n                              [action.payload.product]:{\r\n                                 name: action.payload.product, \r\n                                 qty: action.payload.qty\r\n                                 }\r\n                              }\r\n         }\r\n      default:\r\n         return {...state}\r\n    }\r\n   }","import { combineReducers } from 'redux';\r\nimport BillPageReducer  from './BillPageReducer';\r\n\r\nexport default combineReducers({\r\n    BillPageReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nexport default function configureStore() {\r\n return createStore(\r\n  rootReducer,\r\n   applyMiddleware(thunk)\r\n );\r\n}"],"sourceRoot":""}